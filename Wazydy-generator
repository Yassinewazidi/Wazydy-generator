import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt
import openai
import os

# Configurar OpenAI API Key (reemplaza 'tu-api-key' con tu propia clave)
openai.api_key = 'tu-api-key'

class AttentionLayer(layers.Layer):
    # ... (código de la capa de atención)

class Generator(tf.keras.Model):
    # ... (código del generador)

class TextAI:
    def __init__(self):
        pass

    def generate_text(self, input_text):
        # Usa OpenAI GPT-3 para generar texto en respuesta a la entrada del usuario
        response = openai.Completion.create(
            engine="text-davinci-002",
            prompt=input_text,
            max_tokens=100
        )
        return response.choices[0].text.strip()

# Tamaño del espacio latente para la generación de imágenes
latent_dim = 100
# Tamaño de la imagen generada
output_shape = (64, 64, 3)
# Número de estilos para la generación de imágenes
num_styles = 3

# Crear el generador con múltiples estilos
image_generator = Generator(latent_dim, output_shape, num_styles)

# Resumen del generador de imágenes
image_generator.build((None, latent_dim))
image_generator.summary()

# Instanciar el modelo de texto
text_ai = TextAI()

# Directorio para almacenar imágenes generadas
output_directory = "generated_images"
os.makedirs(output_directory, exist_ok=True)

# Función para generar y guardar imágenes con un estilo específico
def generate_and_save_images(generator, latent_dim, style_idx, num_images=1, output_directory="generated_images"):
    random_input = tf.random.normal([num_images, latent_dim])
    generated_images = generator(random_input, style_idx, training=False).numpy()

    # Guardar las imágenes en archivos
    for i in range(num_images):
        filename = f"{output_directory}/generated_image_style_{style_idx}_{i+1}.png"
        plt.imsave(filename, generated_images[i])

# Función para la generación de texto
def generate_text_response(text_ai, input_text):
    return text_ai.generate_text(input_text)

# Ejemplo de uso
user_input_for_text = "Cuéntame una historia interesante."
generated_text_response = generate_text_response(text_ai, user_input_for_text)
print("Respuesta generada por la IA de texto:")
print(generated_text_response)

# Ejemplo de generación y guardado de imágenes
generate_and_save_images(image_generator, latent_dim, style_idx=0, num_images=3, output_directory=output_directory)
